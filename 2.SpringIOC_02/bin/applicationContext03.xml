<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
<!-- 	<bean id="car01" class="com.atguigu.bean.Car">
		<property name="carName" value="宝马"></property>
		<property name="colour" value="白色"></property>
	</bean>	 -->	
	<bean id="car" class="com.atguigu.bean.Car">
		<property name="carName" value="奔驰"></property>
		<property name="colour" value="黑色"></property>
	</bean>		
	
	<!-- 为Person里面的自定义类型的属性赋值
		property：手动赋值
		自动赋值（自动装配）：	
		
		自动装配：（仅限于对自定义类型的属性有效）
		autowire="default/no"：不自动装配；不自动为car属性赋值
		//按照某种规则自动装配
		autowire="byName":按照名字；
				private Car car;
					1）以属性名作为id去容器中找到这个组件，给他赋值；如果找不到装配null；
					car = ioc.getBean("car")
		autowire="byType":
				private Car car;
					1）以属性的类型作为查找依据去容器中找到这个组件；
					如果容器中有多个这种类型的组件会报错
					2）如果没找到呢？装配null
					car = ioc.getBean(Car.class)
		autowire="constructor":
				public Person(Car car)
				按照构造器进行赋值；
				1）先按照有参构造器参数的类型进行装配（成功就赋值）；没有就直接为组件装配null即可
				2）如果按照类型找到了多个；参数的名作为id继续匹配；找到就装配；找不到就null；
				3）不会报错；
		自动的为属性赋值
	 -->
	 
	<bean id="person" class="com.atguigu.bean.Person" autowire="byType">
		<!-- <property name="car" ref="car"></property> -->
	</bean>
	
	<!-- List<Book> books；容器可以把容器中的所有book封装list赋值给这个属性 -->
	<bean id="book01" class="com.atguigu.bean.Book">
		<property name="bookName" value="book1"></property>
	</bean>
	<bean id="book02" class="com.atguigu.bean.Book">
		<property name="bookName" value="book2"></property>
	</bean>
	<bean id="book03" class="com.atguigu.bean.Book">
		<property name="bookName" value="book3"></property>
	</bean>
	
	
	<!-- 
	实验14：[SpEL测试I](Spring Expression Language)Spring表达式语言
		    在SpEL中使用字面量、
		    引用其他bean、
		    引用其他bean的某个属性值、
		    调用非静态方法
		    调用静态方法、
		    使用运算符
	 -->
	
	<bean id="person02" class="com.atguigu.bean.Person">
		
	</bean>
</beans>
